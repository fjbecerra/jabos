name: Push

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository }}-
  VERSION: "0.0"
  NAMESPACE: jabos

jobs:
  images:
    runs-on: ubuntu-latest
    env:
      BUILD_NUMBER: ${{github.run_number}}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{runner.os}}-buildx-${{github.sha}}
          restore-keys: |
            ${{runner.os}}-buildx-

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: kubectl
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        env:
          IMAGE_NAME: ${{env.REGISTRY}}/${{env.IMAGE_PREFIX}}kubectl
        with:
          context: kubectl
          push: true
          tags: ${{env.IMAGE_NAME}}:${{env.VERSION}}.${{env.BUILD_NUMBER}} , ${{env.IMAGE_NAME}}:${{env.VERSION}} , ${{env.IMAGE_NAME}}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: operator
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        env:
          IMAGE_NAME: ${{env.REGISTRY}}/${{env.IMAGE_PREFIX}}operator
        with:
          context: operator
          push: true
          tags: ${{env.IMAGE_NAME}}:${{env.VERSION}}.${{env.BUILD_NUMBER}} , ${{env.IMAGE_NAME}}:${{env.VERSION}} , ${{env.IMAGE_NAME}}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: git-repository-updater
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        env:
          IMAGE_NAME: ${{env.REGISTRY}}/${{env.IMAGE_PREFIX}}git-repository-updater
        with:
          context: git-repository-updater
          build-args: |
            IMAGE_PREFIX=${{env.REGISTRY}}/${{env.IMAGE_PREFIX}}
            IMAGE_VERSION=:${{env.VERSION}}.${{env.BUILD_NUMBER}}
          push: true
          tags: ${{env.IMAGE_NAME}}:${{env.VERSION}}.${{env.BUILD_NUMBER}} , ${{env.IMAGE_NAME}}:${{env.VERSION}} , ${{env.IMAGE_NAME}}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: docker-image-builder-init
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        env:
          IMAGE_NAME: ${{env.REGISTRY}}/${{env.IMAGE_PREFIX}}docker-image-builder-init
        with:
          context: docker-image-builder-init
          push: true
          tags: ${{env.IMAGE_NAME}}:${{env.VERSION}}.${{env.BUILD_NUMBER}} , ${{env.IMAGE_NAME}}:${{env.VERSION}} , ${{env.IMAGE_NAME}}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: jsonnet-manifest-builder
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        env:
          IMAGE_NAME: ${{env.REGISTRY}}/${{env.IMAGE_PREFIX}}jsonnet-manifest-builder
        with:
          context: jsonnet-manifest-builder
          push: true
          tags: ${{env.IMAGE_NAME}}:${{env.VERSION}}.${{env.BUILD_NUMBER}} , ${{env.IMAGE_NAME}}:${{env.VERSION}} , ${{env.IMAGE_NAME}}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: post-builder
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        env:
          IMAGE_NAME: ${{env.REGISTRY}}/${{env.IMAGE_PREFIX}}post-builder
        with:
          context: post-builder
          build-args: |
            IMAGE_PREFIX=${{env.REGISTRY}}/${{env.IMAGE_PREFIX}}
            IMAGE_VERSION=:${{env.VERSION}}.${{env.BUILD_NUMBER}}
          push: true
          tags: ${{env.IMAGE_NAME}}:${{env.VERSION}}.${{env.BUILD_NUMBER}},${{env.IMAGE_NAME}}:${{env.VERSION}} , ${{env.IMAGE_NAME}}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: pre-builder
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        env:
          IMAGE_NAME: ${{env.REGISTRY}}/${{env.IMAGE_PREFIX}}pre-builder
        with:
          context: pre-builder
          push: true
          tags: ${{env.IMAGE_NAME}}:${{env.VERSION}}.${{env.BUILD_NUMBER}},${{env.IMAGE_NAME}}:${{env.VERSION}} , ${{env.IMAGE_NAME}}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: manifest-deployer
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        env:
          IMAGE_NAME: ${{env.REGISTRY}}/${{env.IMAGE_PREFIX}}manifest-deployer
        with:
          context: manifest-deployer
          build-args: |
            IMAGE_PREFIX=${{env.REGISTRY}}/${{env.IMAGE_PREFIX}}
            IMAGE_VERSION=:${{env.VERSION}}.${{env.BUILD_NUMBER}}
          push: true
          tags: ${{env.IMAGE_NAME}}:${{env.VERSION}}.${{env.BUILD_NUMBER}} , ${{env.IMAGE_NAME}}:${{env.VERSION}} , ${{env.IMAGE_NAME}}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  manifests:
    runs-on: ubuntu-latest
    env:
      BUILD_NUMBER: ${{github.run_number}}
    steps:
      - uses: actions/checkout@v2

      - name: Package
        run: |-
          mkdir ./build
          mkdir ./build/input
          chmod -R 777 ./manifests
          docker run --mount "type=bind,src=$(pwd)/manifests,dst=/src" \
            ghcr.io/srfrnk/k8s-jsonnet-manifest-packager:latest -- /src \
            --tla-str 'imagePrefix=${{env.REGISTRY}}/${{env.IMAGE_PREFIX}}' \
            --tla-str 'buildNumber=${{env.VERSION}}.${{env.BUILD_NUMBER}}' \
            --tla-str 'namespace=${{env.NAMESPACE}}' \
            --tla-str 'debug=false' \
            > ./build/jabos-manifests.yaml
          cp ./build/jabos-manifests.yaml ./build/input/jabos-manifests.yaml

      - uses: srfrnk/setup-yq@v1.0.2

      - name: Generate Docs
        run: |-
          mkdir ./build/output
          chmod -R 777 ./build/output
          yq e '.api-info.version="${{env.VERSION}}.${{env.BUILD_NUMBER}}"' ./api-info.yaml > ./build/input/api-info.yaml
          docker run --mount "type=bind,src=$(pwd)/build/input,dst=/input,readonly" \
            --mount "type=bind,src=$(pwd)/build/output,dst=/output" \
            ghcr.io/srfrnk/crd-api-doc-gen:latest /input /output /input/api-info.yaml

      - name: Deploy Docs
        uses: JamesIves/github-pages-deploy-action@4.1.5
        if: github.ref == 'refs/heads/main'
        with:
          branch: gh-pages
          folder: build/output

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Build ${{env.VERSION}}.${{env.BUILD_NUMBER}}
          tag_name: ${{env.VERSION}}.${{env.BUILD_NUMBER}}
          draft: false
          prerelease: false

      - name: Upload Manifests Asset
        id: upload-release-asset-manifests
        uses: actions/upload-release-asset@v1
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/jabos-manifests.yaml
          asset_name: jabos-manifests.yaml
          asset_content_type: text/yaml

      - name: Upload Readme Asset
        id: upload-release-asset-readme
        uses: actions/upload-release-asset@v1
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./README.md
          asset_name: README.md
          asset_content_type: text/markdown

      - name: Upload Api Docs Asset
        id: upload-release-asset-api-docs
        uses: actions/upload-release-asset@v1
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/output/index.html
          asset_name: api-docs.html
          asset_content_type: text/html
