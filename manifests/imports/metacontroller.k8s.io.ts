// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema CompositeController
 */
export class CompositeController extends ApiObject {
  /**
   * Returns the apiVersion and kind for "CompositeController"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'metacontroller.k8s.io/v1alpha1',
    kind: 'CompositeController',
  }

  /**
   * Renders a Kubernetes manifest for "CompositeController".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: CompositeControllerProps): any {
    return {
      ...CompositeController.GVK,
      ...toJson_CompositeControllerProps(props),
    };
  }

  /**
   * Defines a "CompositeController" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: CompositeControllerProps) {
    super(scope, id, {
      ...CompositeController.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...CompositeController.GVK,
      ...toJson_CompositeControllerProps(resolved),
    };
  }
}

/**
 * @schema CompositeController
 */
export interface CompositeControllerProps {
  /**
   * @schema CompositeController#metadata
   */
  readonly metadata: ApiObjectMetadata;

  /**
   * @schema CompositeController#spec
   */
  readonly spec: CompositeControllerSpec;

}

/**
 * Converts an object of type 'CompositeControllerProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerProps(obj: CompositeControllerProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_CompositeControllerSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpec
 */
export interface CompositeControllerSpec {
  /**
   * @schema CompositeControllerSpec#childResources
   */
  readonly childResources?: CompositeControllerSpecChildResources[];

  /**
   * @schema CompositeControllerSpec#generateSelector
   */
  readonly generateSelector?: boolean;

  /**
   * @schema CompositeControllerSpec#hooks
   */
  readonly hooks?: CompositeControllerSpecHooks;

  /**
   * @schema CompositeControllerSpec#parentResource
   */
  readonly parentResource: CompositeControllerSpecParentResource;

  /**
   * @schema CompositeControllerSpec#resyncPeriodSeconds
   */
  readonly resyncPeriodSeconds?: number;

}

/**
 * Converts an object of type 'CompositeControllerSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpec(obj: CompositeControllerSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'childResources': obj.childResources?.map(y => toJson_CompositeControllerSpecChildResources(y)),
    'generateSelector': obj.generateSelector,
    'hooks': toJson_CompositeControllerSpecHooks(obj.hooks),
    'parentResource': toJson_CompositeControllerSpecParentResource(obj.parentResource),
    'resyncPeriodSeconds': obj.resyncPeriodSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecChildResources
 */
export interface CompositeControllerSpecChildResources {
  /**
   * @schema CompositeControllerSpecChildResources#apiVersion
   */
  readonly apiVersion: string;

  /**
   * @schema CompositeControllerSpecChildResources#resource
   */
  readonly resource: string;

  /**
   * @schema CompositeControllerSpecChildResources#updateStrategy
   */
  readonly updateStrategy?: CompositeControllerSpecChildResourcesUpdateStrategy;

}

/**
 * Converts an object of type 'CompositeControllerSpecChildResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecChildResources(obj: CompositeControllerSpecChildResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'resource': obj.resource,
    'updateStrategy': toJson_CompositeControllerSpecChildResourcesUpdateStrategy(obj.updateStrategy),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecHooks
 */
export interface CompositeControllerSpecHooks {
  /**
   * @schema CompositeControllerSpecHooks#customize
   */
  readonly customize?: CompositeControllerSpecHooksCustomize;

  /**
   * @schema CompositeControllerSpecHooks#finalize
   */
  readonly finalize?: CompositeControllerSpecHooksFinalize;

  /**
   * @schema CompositeControllerSpecHooks#postUpdateChild
   */
  readonly postUpdateChild?: CompositeControllerSpecHooksPostUpdateChild;

  /**
   * @schema CompositeControllerSpecHooks#preUpdateChild
   */
  readonly preUpdateChild?: CompositeControllerSpecHooksPreUpdateChild;

  /**
   * @schema CompositeControllerSpecHooks#sync
   */
  readonly sync?: CompositeControllerSpecHooksSync;

}

/**
 * Converts an object of type 'CompositeControllerSpecHooks' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecHooks(obj: CompositeControllerSpecHooks | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'customize': toJson_CompositeControllerSpecHooksCustomize(obj.customize),
    'finalize': toJson_CompositeControllerSpecHooksFinalize(obj.finalize),
    'postUpdateChild': toJson_CompositeControllerSpecHooksPostUpdateChild(obj.postUpdateChild),
    'preUpdateChild': toJson_CompositeControllerSpecHooksPreUpdateChild(obj.preUpdateChild),
    'sync': toJson_CompositeControllerSpecHooksSync(obj.sync),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecParentResource
 */
export interface CompositeControllerSpecParentResource {
  /**
   * @schema CompositeControllerSpecParentResource#apiVersion
   */
  readonly apiVersion: string;

  /**
   * @schema CompositeControllerSpecParentResource#resource
   */
  readonly resource: string;

  /**
   * @schema CompositeControllerSpecParentResource#revisionHistory
   */
  readonly revisionHistory?: CompositeControllerSpecParentResourceRevisionHistory;

}

/**
 * Converts an object of type 'CompositeControllerSpecParentResource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecParentResource(obj: CompositeControllerSpecParentResource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'resource': obj.resource,
    'revisionHistory': toJson_CompositeControllerSpecParentResourceRevisionHistory(obj.revisionHistory),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecChildResourcesUpdateStrategy
 */
export interface CompositeControllerSpecChildResourcesUpdateStrategy {
  /**
   * @schema CompositeControllerSpecChildResourcesUpdateStrategy#method
   */
  readonly method?: string;

  /**
   * @schema CompositeControllerSpecChildResourcesUpdateStrategy#statusChecks
   */
  readonly statusChecks?: CompositeControllerSpecChildResourcesUpdateStrategyStatusChecks;

}

/**
 * Converts an object of type 'CompositeControllerSpecChildResourcesUpdateStrategy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecChildResourcesUpdateStrategy(obj: CompositeControllerSpecChildResourcesUpdateStrategy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'method': obj.method,
    'statusChecks': toJson_CompositeControllerSpecChildResourcesUpdateStrategyStatusChecks(obj.statusChecks),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecHooksCustomize
 */
export interface CompositeControllerSpecHooksCustomize {
  /**
   * @schema CompositeControllerSpecHooksCustomize#webhook
   */
  readonly webhook?: CompositeControllerSpecHooksCustomizeWebhook;

}

/**
 * Converts an object of type 'CompositeControllerSpecHooksCustomize' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecHooksCustomize(obj: CompositeControllerSpecHooksCustomize | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'webhook': toJson_CompositeControllerSpecHooksCustomizeWebhook(obj.webhook),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecHooksFinalize
 */
export interface CompositeControllerSpecHooksFinalize {
  /**
   * @schema CompositeControllerSpecHooksFinalize#webhook
   */
  readonly webhook?: CompositeControllerSpecHooksFinalizeWebhook;

}

/**
 * Converts an object of type 'CompositeControllerSpecHooksFinalize' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecHooksFinalize(obj: CompositeControllerSpecHooksFinalize | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'webhook': toJson_CompositeControllerSpecHooksFinalizeWebhook(obj.webhook),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecHooksPostUpdateChild
 */
export interface CompositeControllerSpecHooksPostUpdateChild {
  /**
   * @schema CompositeControllerSpecHooksPostUpdateChild#webhook
   */
  readonly webhook?: CompositeControllerSpecHooksPostUpdateChildWebhook;

}

/**
 * Converts an object of type 'CompositeControllerSpecHooksPostUpdateChild' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecHooksPostUpdateChild(obj: CompositeControllerSpecHooksPostUpdateChild | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'webhook': toJson_CompositeControllerSpecHooksPostUpdateChildWebhook(obj.webhook),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecHooksPreUpdateChild
 */
export interface CompositeControllerSpecHooksPreUpdateChild {
  /**
   * @schema CompositeControllerSpecHooksPreUpdateChild#webhook
   */
  readonly webhook?: CompositeControllerSpecHooksPreUpdateChildWebhook;

}

/**
 * Converts an object of type 'CompositeControllerSpecHooksPreUpdateChild' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecHooksPreUpdateChild(obj: CompositeControllerSpecHooksPreUpdateChild | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'webhook': toJson_CompositeControllerSpecHooksPreUpdateChildWebhook(obj.webhook),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecHooksSync
 */
export interface CompositeControllerSpecHooksSync {
  /**
   * @schema CompositeControllerSpecHooksSync#webhook
   */
  readonly webhook?: CompositeControllerSpecHooksSyncWebhook;

}

/**
 * Converts an object of type 'CompositeControllerSpecHooksSync' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecHooksSync(obj: CompositeControllerSpecHooksSync | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'webhook': toJson_CompositeControllerSpecHooksSyncWebhook(obj.webhook),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecParentResourceRevisionHistory
 */
export interface CompositeControllerSpecParentResourceRevisionHistory {
  /**
   * @schema CompositeControllerSpecParentResourceRevisionHistory#fieldPaths
   */
  readonly fieldPaths?: string[];

}

/**
 * Converts an object of type 'CompositeControllerSpecParentResourceRevisionHistory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecParentResourceRevisionHistory(obj: CompositeControllerSpecParentResourceRevisionHistory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldPaths': obj.fieldPaths?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecChildResourcesUpdateStrategyStatusChecks
 */
export interface CompositeControllerSpecChildResourcesUpdateStrategyStatusChecks {
  /**
   * @schema CompositeControllerSpecChildResourcesUpdateStrategyStatusChecks#conditions
   */
  readonly conditions?: CompositeControllerSpecChildResourcesUpdateStrategyStatusChecksConditions[];

}

/**
 * Converts an object of type 'CompositeControllerSpecChildResourcesUpdateStrategyStatusChecks' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecChildResourcesUpdateStrategyStatusChecks(obj: CompositeControllerSpecChildResourcesUpdateStrategyStatusChecks | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'conditions': obj.conditions?.map(y => toJson_CompositeControllerSpecChildResourcesUpdateStrategyStatusChecksConditions(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecHooksCustomizeWebhook
 */
export interface CompositeControllerSpecHooksCustomizeWebhook {
  /**
   * @schema CompositeControllerSpecHooksCustomizeWebhook#path
   */
  readonly path?: string;

  /**
   * @schema CompositeControllerSpecHooksCustomizeWebhook#service
   */
  readonly service?: CompositeControllerSpecHooksCustomizeWebhookService;

  /**
   * @schema CompositeControllerSpecHooksCustomizeWebhook#timeout
   */
  readonly timeout?: string;

  /**
   * @schema CompositeControllerSpecHooksCustomizeWebhook#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'CompositeControllerSpecHooksCustomizeWebhook' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecHooksCustomizeWebhook(obj: CompositeControllerSpecHooksCustomizeWebhook | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'service': toJson_CompositeControllerSpecHooksCustomizeWebhookService(obj.service),
    'timeout': obj.timeout,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecHooksFinalizeWebhook
 */
export interface CompositeControllerSpecHooksFinalizeWebhook {
  /**
   * @schema CompositeControllerSpecHooksFinalizeWebhook#path
   */
  readonly path?: string;

  /**
   * @schema CompositeControllerSpecHooksFinalizeWebhook#service
   */
  readonly service?: CompositeControllerSpecHooksFinalizeWebhookService;

  /**
   * @schema CompositeControllerSpecHooksFinalizeWebhook#timeout
   */
  readonly timeout?: string;

  /**
   * @schema CompositeControllerSpecHooksFinalizeWebhook#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'CompositeControllerSpecHooksFinalizeWebhook' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecHooksFinalizeWebhook(obj: CompositeControllerSpecHooksFinalizeWebhook | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'service': toJson_CompositeControllerSpecHooksFinalizeWebhookService(obj.service),
    'timeout': obj.timeout,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecHooksPostUpdateChildWebhook
 */
export interface CompositeControllerSpecHooksPostUpdateChildWebhook {
  /**
   * @schema CompositeControllerSpecHooksPostUpdateChildWebhook#path
   */
  readonly path?: string;

  /**
   * @schema CompositeControllerSpecHooksPostUpdateChildWebhook#service
   */
  readonly service?: CompositeControllerSpecHooksPostUpdateChildWebhookService;

  /**
   * @schema CompositeControllerSpecHooksPostUpdateChildWebhook#timeout
   */
  readonly timeout?: string;

  /**
   * @schema CompositeControllerSpecHooksPostUpdateChildWebhook#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'CompositeControllerSpecHooksPostUpdateChildWebhook' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecHooksPostUpdateChildWebhook(obj: CompositeControllerSpecHooksPostUpdateChildWebhook | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'service': toJson_CompositeControllerSpecHooksPostUpdateChildWebhookService(obj.service),
    'timeout': obj.timeout,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecHooksPreUpdateChildWebhook
 */
export interface CompositeControllerSpecHooksPreUpdateChildWebhook {
  /**
   * @schema CompositeControllerSpecHooksPreUpdateChildWebhook#path
   */
  readonly path?: string;

  /**
   * @schema CompositeControllerSpecHooksPreUpdateChildWebhook#service
   */
  readonly service?: CompositeControllerSpecHooksPreUpdateChildWebhookService;

  /**
   * @schema CompositeControllerSpecHooksPreUpdateChildWebhook#timeout
   */
  readonly timeout?: string;

  /**
   * @schema CompositeControllerSpecHooksPreUpdateChildWebhook#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'CompositeControllerSpecHooksPreUpdateChildWebhook' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecHooksPreUpdateChildWebhook(obj: CompositeControllerSpecHooksPreUpdateChildWebhook | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'service': toJson_CompositeControllerSpecHooksPreUpdateChildWebhookService(obj.service),
    'timeout': obj.timeout,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecHooksSyncWebhook
 */
export interface CompositeControllerSpecHooksSyncWebhook {
  /**
   * @schema CompositeControllerSpecHooksSyncWebhook#path
   */
  readonly path?: string;

  /**
   * @schema CompositeControllerSpecHooksSyncWebhook#service
   */
  readonly service?: CompositeControllerSpecHooksSyncWebhookService;

  /**
   * @schema CompositeControllerSpecHooksSyncWebhook#timeout
   */
  readonly timeout?: string;

  /**
   * @schema CompositeControllerSpecHooksSyncWebhook#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'CompositeControllerSpecHooksSyncWebhook' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecHooksSyncWebhook(obj: CompositeControllerSpecHooksSyncWebhook | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'service': toJson_CompositeControllerSpecHooksSyncWebhookService(obj.service),
    'timeout': obj.timeout,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecChildResourcesUpdateStrategyStatusChecksConditions
 */
export interface CompositeControllerSpecChildResourcesUpdateStrategyStatusChecksConditions {
  /**
   * @schema CompositeControllerSpecChildResourcesUpdateStrategyStatusChecksConditions#reason
   */
  readonly reason?: string;

  /**
   * @schema CompositeControllerSpecChildResourcesUpdateStrategyStatusChecksConditions#status
   */
  readonly status?: string;

  /**
   * @schema CompositeControllerSpecChildResourcesUpdateStrategyStatusChecksConditions#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'CompositeControllerSpecChildResourcesUpdateStrategyStatusChecksConditions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecChildResourcesUpdateStrategyStatusChecksConditions(obj: CompositeControllerSpecChildResourcesUpdateStrategyStatusChecksConditions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'reason': obj.reason,
    'status': obj.status,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecHooksCustomizeWebhookService
 */
export interface CompositeControllerSpecHooksCustomizeWebhookService {
  /**
   * @schema CompositeControllerSpecHooksCustomizeWebhookService#name
   */
  readonly name: string;

  /**
   * @schema CompositeControllerSpecHooksCustomizeWebhookService#namespace
   */
  readonly namespace: string;

  /**
   * @schema CompositeControllerSpecHooksCustomizeWebhookService#port
   */
  readonly port?: number;

  /**
   * @schema CompositeControllerSpecHooksCustomizeWebhookService#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'CompositeControllerSpecHooksCustomizeWebhookService' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecHooksCustomizeWebhookService(obj: CompositeControllerSpecHooksCustomizeWebhookService | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'namespace': obj.namespace,
    'port': obj.port,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecHooksFinalizeWebhookService
 */
export interface CompositeControllerSpecHooksFinalizeWebhookService {
  /**
   * @schema CompositeControllerSpecHooksFinalizeWebhookService#name
   */
  readonly name: string;

  /**
   * @schema CompositeControllerSpecHooksFinalizeWebhookService#namespace
   */
  readonly namespace: string;

  /**
   * @schema CompositeControllerSpecHooksFinalizeWebhookService#port
   */
  readonly port?: number;

  /**
   * @schema CompositeControllerSpecHooksFinalizeWebhookService#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'CompositeControllerSpecHooksFinalizeWebhookService' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecHooksFinalizeWebhookService(obj: CompositeControllerSpecHooksFinalizeWebhookService | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'namespace': obj.namespace,
    'port': obj.port,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecHooksPostUpdateChildWebhookService
 */
export interface CompositeControllerSpecHooksPostUpdateChildWebhookService {
  /**
   * @schema CompositeControllerSpecHooksPostUpdateChildWebhookService#name
   */
  readonly name: string;

  /**
   * @schema CompositeControllerSpecHooksPostUpdateChildWebhookService#namespace
   */
  readonly namespace: string;

  /**
   * @schema CompositeControllerSpecHooksPostUpdateChildWebhookService#port
   */
  readonly port?: number;

  /**
   * @schema CompositeControllerSpecHooksPostUpdateChildWebhookService#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'CompositeControllerSpecHooksPostUpdateChildWebhookService' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecHooksPostUpdateChildWebhookService(obj: CompositeControllerSpecHooksPostUpdateChildWebhookService | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'namespace': obj.namespace,
    'port': obj.port,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecHooksPreUpdateChildWebhookService
 */
export interface CompositeControllerSpecHooksPreUpdateChildWebhookService {
  /**
   * @schema CompositeControllerSpecHooksPreUpdateChildWebhookService#name
   */
  readonly name: string;

  /**
   * @schema CompositeControllerSpecHooksPreUpdateChildWebhookService#namespace
   */
  readonly namespace: string;

  /**
   * @schema CompositeControllerSpecHooksPreUpdateChildWebhookService#port
   */
  readonly port?: number;

  /**
   * @schema CompositeControllerSpecHooksPreUpdateChildWebhookService#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'CompositeControllerSpecHooksPreUpdateChildWebhookService' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecHooksPreUpdateChildWebhookService(obj: CompositeControllerSpecHooksPreUpdateChildWebhookService | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'namespace': obj.namespace,
    'port': obj.port,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CompositeControllerSpecHooksSyncWebhookService
 */
export interface CompositeControllerSpecHooksSyncWebhookService {
  /**
   * @schema CompositeControllerSpecHooksSyncWebhookService#name
   */
  readonly name: string;

  /**
   * @schema CompositeControllerSpecHooksSyncWebhookService#namespace
   */
  readonly namespace: string;

  /**
   * @schema CompositeControllerSpecHooksSyncWebhookService#port
   */
  readonly port?: number;

  /**
   * @schema CompositeControllerSpecHooksSyncWebhookService#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'CompositeControllerSpecHooksSyncWebhookService' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CompositeControllerSpecHooksSyncWebhookService(obj: CompositeControllerSpecHooksSyncWebhookService | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'namespace': obj.namespace,
    'port': obj.port,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 *
 *
 * @schema ControllerRevision
 */
export class ControllerRevision extends ApiObject {
  /**
   * Returns the apiVersion and kind for "ControllerRevision"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'metacontroller.k8s.io/v1alpha1',
    kind: 'ControllerRevision',
  }

  /**
   * Renders a Kubernetes manifest for "ControllerRevision".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: ControllerRevisionProps): any {
    return {
      ...ControllerRevision.GVK,
      ...toJson_ControllerRevisionProps(props),
    };
  }

  /**
   * Defines a "ControllerRevision" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: ControllerRevisionProps) {
    super(scope, id, {
      ...ControllerRevision.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...ControllerRevision.GVK,
      ...toJson_ControllerRevisionProps(resolved),
    };
  }
}

/**
 * @schema ControllerRevision
 */
export interface ControllerRevisionProps {
  /**
   * @schema ControllerRevision#children
   */
  readonly children?: ControllerRevisionChildren[];

  /**
   * @schema ControllerRevision#metadata
   */
  readonly metadata: ApiObjectMetadata;

  /**
   * @schema ControllerRevision#parentPatch
   */
  readonly parentPatch: any;

}

/**
 * Converts an object of type 'ControllerRevisionProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ControllerRevisionProps(obj: ControllerRevisionProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'children': obj.children?.map(y => toJson_ControllerRevisionChildren(y)),
    'metadata': obj.metadata,
    'parentPatch': obj.parentPatch,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ControllerRevisionChildren
 */
export interface ControllerRevisionChildren {
  /**
   * @schema ControllerRevisionChildren#apiGroup
   */
  readonly apiGroup: string;

  /**
   * @schema ControllerRevisionChildren#kind
   */
  readonly kind: string;

  /**
   * @schema ControllerRevisionChildren#names
   */
  readonly names: string[];

}

/**
 * Converts an object of type 'ControllerRevisionChildren' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ControllerRevisionChildren(obj: ControllerRevisionChildren | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'names': obj.names?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 *
 *
 * @schema DecoratorController
 */
export class DecoratorController extends ApiObject {
  /**
   * Returns the apiVersion and kind for "DecoratorController"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'metacontroller.k8s.io/v1alpha1',
    kind: 'DecoratorController',
  }

  /**
   * Renders a Kubernetes manifest for "DecoratorController".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: DecoratorControllerProps): any {
    return {
      ...DecoratorController.GVK,
      ...toJson_DecoratorControllerProps(props),
    };
  }

  /**
   * Defines a "DecoratorController" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: DecoratorControllerProps) {
    super(scope, id, {
      ...DecoratorController.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...DecoratorController.GVK,
      ...toJson_DecoratorControllerProps(resolved),
    };
  }
}

/**
 * @schema DecoratorController
 */
export interface DecoratorControllerProps {
  /**
   * @schema DecoratorController#metadata
   */
  readonly metadata: ApiObjectMetadata;

  /**
   * @schema DecoratorController#spec
   */
  readonly spec: DecoratorControllerSpec;

}

/**
 * Converts an object of type 'DecoratorControllerProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerProps(obj: DecoratorControllerProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_DecoratorControllerSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DecoratorControllerSpec
 */
export interface DecoratorControllerSpec {
  /**
   * @schema DecoratorControllerSpec#attachments
   */
  readonly attachments?: DecoratorControllerSpecAttachments[];

  /**
   * @schema DecoratorControllerSpec#hooks
   */
  readonly hooks?: DecoratorControllerSpecHooks;

  /**
   * @schema DecoratorControllerSpec#resources
   */
  readonly resources: DecoratorControllerSpecResources[];

  /**
   * @schema DecoratorControllerSpec#resyncPeriodSeconds
   */
  readonly resyncPeriodSeconds?: number;

}

/**
 * Converts an object of type 'DecoratorControllerSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerSpec(obj: DecoratorControllerSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'attachments': obj.attachments?.map(y => toJson_DecoratorControllerSpecAttachments(y)),
    'hooks': toJson_DecoratorControllerSpecHooks(obj.hooks),
    'resources': obj.resources?.map(y => toJson_DecoratorControllerSpecResources(y)),
    'resyncPeriodSeconds': obj.resyncPeriodSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DecoratorControllerSpecAttachments
 */
export interface DecoratorControllerSpecAttachments {
  /**
   * @schema DecoratorControllerSpecAttachments#apiVersion
   */
  readonly apiVersion: string;

  /**
   * @schema DecoratorControllerSpecAttachments#resource
   */
  readonly resource: string;

  /**
   * @schema DecoratorControllerSpecAttachments#updateStrategy
   */
  readonly updateStrategy?: DecoratorControllerSpecAttachmentsUpdateStrategy;

}

/**
 * Converts an object of type 'DecoratorControllerSpecAttachments' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerSpecAttachments(obj: DecoratorControllerSpecAttachments | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'resource': obj.resource,
    'updateStrategy': toJson_DecoratorControllerSpecAttachmentsUpdateStrategy(obj.updateStrategy),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DecoratorControllerSpecHooks
 */
export interface DecoratorControllerSpecHooks {
  /**
   * @schema DecoratorControllerSpecHooks#customize
   */
  readonly customize?: DecoratorControllerSpecHooksCustomize;

  /**
   * @schema DecoratorControllerSpecHooks#finalize
   */
  readonly finalize?: DecoratorControllerSpecHooksFinalize;

  /**
   * @schema DecoratorControllerSpecHooks#sync
   */
  readonly sync?: DecoratorControllerSpecHooksSync;

}

/**
 * Converts an object of type 'DecoratorControllerSpecHooks' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerSpecHooks(obj: DecoratorControllerSpecHooks | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'customize': toJson_DecoratorControllerSpecHooksCustomize(obj.customize),
    'finalize': toJson_DecoratorControllerSpecHooksFinalize(obj.finalize),
    'sync': toJson_DecoratorControllerSpecHooksSync(obj.sync),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DecoratorControllerSpecResources
 */
export interface DecoratorControllerSpecResources {
  /**
   * @schema DecoratorControllerSpecResources#annotationSelector
   */
  readonly annotationSelector?: DecoratorControllerSpecResourcesAnnotationSelector;

  /**
   * @schema DecoratorControllerSpecResources#apiVersion
   */
  readonly apiVersion: string;

  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema DecoratorControllerSpecResources#labelSelector
   */
  readonly labelSelector?: DecoratorControllerSpecResourcesLabelSelector;

  /**
   * @schema DecoratorControllerSpecResources#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'DecoratorControllerSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerSpecResources(obj: DecoratorControllerSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotationSelector': toJson_DecoratorControllerSpecResourcesAnnotationSelector(obj.annotationSelector),
    'apiVersion': obj.apiVersion,
    'labelSelector': toJson_DecoratorControllerSpecResourcesLabelSelector(obj.labelSelector),
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DecoratorControllerSpecAttachmentsUpdateStrategy
 */
export interface DecoratorControllerSpecAttachmentsUpdateStrategy {
  /**
   * @schema DecoratorControllerSpecAttachmentsUpdateStrategy#method
   */
  readonly method?: string;

}

/**
 * Converts an object of type 'DecoratorControllerSpecAttachmentsUpdateStrategy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerSpecAttachmentsUpdateStrategy(obj: DecoratorControllerSpecAttachmentsUpdateStrategy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'method': obj.method,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DecoratorControllerSpecHooksCustomize
 */
export interface DecoratorControllerSpecHooksCustomize {
  /**
   * @schema DecoratorControllerSpecHooksCustomize#webhook
   */
  readonly webhook?: DecoratorControllerSpecHooksCustomizeWebhook;

}

/**
 * Converts an object of type 'DecoratorControllerSpecHooksCustomize' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerSpecHooksCustomize(obj: DecoratorControllerSpecHooksCustomize | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'webhook': toJson_DecoratorControllerSpecHooksCustomizeWebhook(obj.webhook),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DecoratorControllerSpecHooksFinalize
 */
export interface DecoratorControllerSpecHooksFinalize {
  /**
   * @schema DecoratorControllerSpecHooksFinalize#webhook
   */
  readonly webhook?: DecoratorControllerSpecHooksFinalizeWebhook;

}

/**
 * Converts an object of type 'DecoratorControllerSpecHooksFinalize' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerSpecHooksFinalize(obj: DecoratorControllerSpecHooksFinalize | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'webhook': toJson_DecoratorControllerSpecHooksFinalizeWebhook(obj.webhook),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DecoratorControllerSpecHooksSync
 */
export interface DecoratorControllerSpecHooksSync {
  /**
   * @schema DecoratorControllerSpecHooksSync#webhook
   */
  readonly webhook?: DecoratorControllerSpecHooksSyncWebhook;

}

/**
 * Converts an object of type 'DecoratorControllerSpecHooksSync' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerSpecHooksSync(obj: DecoratorControllerSpecHooksSync | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'webhook': toJson_DecoratorControllerSpecHooksSyncWebhook(obj.webhook),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DecoratorControllerSpecResourcesAnnotationSelector
 */
export interface DecoratorControllerSpecResourcesAnnotationSelector {
  /**
   * @schema DecoratorControllerSpecResourcesAnnotationSelector#matchAnnotations
   */
  readonly matchAnnotations?: { [key: string]: string };

  /**
   * @schema DecoratorControllerSpecResourcesAnnotationSelector#matchExpressions
   */
  readonly matchExpressions?: DecoratorControllerSpecResourcesAnnotationSelectorMatchExpressions[];

}

/**
 * Converts an object of type 'DecoratorControllerSpecResourcesAnnotationSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerSpecResourcesAnnotationSelector(obj: DecoratorControllerSpecResourcesAnnotationSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchAnnotations': ((obj.matchAnnotations) === undefined) ? undefined : (Object.entries(obj.matchAnnotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'matchExpressions': obj.matchExpressions?.map(y => toJson_DecoratorControllerSpecResourcesAnnotationSelectorMatchExpressions(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema DecoratorControllerSpecResourcesLabelSelector
 */
export interface DecoratorControllerSpecResourcesLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema DecoratorControllerSpecResourcesLabelSelector#matchExpressions
   */
  readonly matchExpressions?: DecoratorControllerSpecResourcesLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema DecoratorControllerSpecResourcesLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'DecoratorControllerSpecResourcesLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerSpecResourcesLabelSelector(obj: DecoratorControllerSpecResourcesLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_DecoratorControllerSpecResourcesLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DecoratorControllerSpecHooksCustomizeWebhook
 */
export interface DecoratorControllerSpecHooksCustomizeWebhook {
  /**
   * @schema DecoratorControllerSpecHooksCustomizeWebhook#path
   */
  readonly path?: string;

  /**
   * @schema DecoratorControllerSpecHooksCustomizeWebhook#service
   */
  readonly service?: DecoratorControllerSpecHooksCustomizeWebhookService;

  /**
   * @schema DecoratorControllerSpecHooksCustomizeWebhook#timeout
   */
  readonly timeout?: string;

  /**
   * @schema DecoratorControllerSpecHooksCustomizeWebhook#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'DecoratorControllerSpecHooksCustomizeWebhook' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerSpecHooksCustomizeWebhook(obj: DecoratorControllerSpecHooksCustomizeWebhook | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'service': toJson_DecoratorControllerSpecHooksCustomizeWebhookService(obj.service),
    'timeout': obj.timeout,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DecoratorControllerSpecHooksFinalizeWebhook
 */
export interface DecoratorControllerSpecHooksFinalizeWebhook {
  /**
   * @schema DecoratorControllerSpecHooksFinalizeWebhook#path
   */
  readonly path?: string;

  /**
   * @schema DecoratorControllerSpecHooksFinalizeWebhook#service
   */
  readonly service?: DecoratorControllerSpecHooksFinalizeWebhookService;

  /**
   * @schema DecoratorControllerSpecHooksFinalizeWebhook#timeout
   */
  readonly timeout?: string;

  /**
   * @schema DecoratorControllerSpecHooksFinalizeWebhook#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'DecoratorControllerSpecHooksFinalizeWebhook' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerSpecHooksFinalizeWebhook(obj: DecoratorControllerSpecHooksFinalizeWebhook | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'service': toJson_DecoratorControllerSpecHooksFinalizeWebhookService(obj.service),
    'timeout': obj.timeout,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DecoratorControllerSpecHooksSyncWebhook
 */
export interface DecoratorControllerSpecHooksSyncWebhook {
  /**
   * @schema DecoratorControllerSpecHooksSyncWebhook#path
   */
  readonly path?: string;

  /**
   * @schema DecoratorControllerSpecHooksSyncWebhook#service
   */
  readonly service?: DecoratorControllerSpecHooksSyncWebhookService;

  /**
   * @schema DecoratorControllerSpecHooksSyncWebhook#timeout
   */
  readonly timeout?: string;

  /**
   * @schema DecoratorControllerSpecHooksSyncWebhook#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'DecoratorControllerSpecHooksSyncWebhook' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerSpecHooksSyncWebhook(obj: DecoratorControllerSpecHooksSyncWebhook | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'service': toJson_DecoratorControllerSpecHooksSyncWebhookService(obj.service),
    'timeout': obj.timeout,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema DecoratorControllerSpecResourcesAnnotationSelectorMatchExpressions
 */
export interface DecoratorControllerSpecResourcesAnnotationSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema DecoratorControllerSpecResourcesAnnotationSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema DecoratorControllerSpecResourcesAnnotationSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema DecoratorControllerSpecResourcesAnnotationSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'DecoratorControllerSpecResourcesAnnotationSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerSpecResourcesAnnotationSelectorMatchExpressions(obj: DecoratorControllerSpecResourcesAnnotationSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema DecoratorControllerSpecResourcesLabelSelectorMatchExpressions
 */
export interface DecoratorControllerSpecResourcesLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema DecoratorControllerSpecResourcesLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema DecoratorControllerSpecResourcesLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema DecoratorControllerSpecResourcesLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'DecoratorControllerSpecResourcesLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerSpecResourcesLabelSelectorMatchExpressions(obj: DecoratorControllerSpecResourcesLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DecoratorControllerSpecHooksCustomizeWebhookService
 */
export interface DecoratorControllerSpecHooksCustomizeWebhookService {
  /**
   * @schema DecoratorControllerSpecHooksCustomizeWebhookService#name
   */
  readonly name: string;

  /**
   * @schema DecoratorControllerSpecHooksCustomizeWebhookService#namespace
   */
  readonly namespace: string;

  /**
   * @schema DecoratorControllerSpecHooksCustomizeWebhookService#port
   */
  readonly port?: number;

  /**
   * @schema DecoratorControllerSpecHooksCustomizeWebhookService#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'DecoratorControllerSpecHooksCustomizeWebhookService' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerSpecHooksCustomizeWebhookService(obj: DecoratorControllerSpecHooksCustomizeWebhookService | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'namespace': obj.namespace,
    'port': obj.port,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DecoratorControllerSpecHooksFinalizeWebhookService
 */
export interface DecoratorControllerSpecHooksFinalizeWebhookService {
  /**
   * @schema DecoratorControllerSpecHooksFinalizeWebhookService#name
   */
  readonly name: string;

  /**
   * @schema DecoratorControllerSpecHooksFinalizeWebhookService#namespace
   */
  readonly namespace: string;

  /**
   * @schema DecoratorControllerSpecHooksFinalizeWebhookService#port
   */
  readonly port?: number;

  /**
   * @schema DecoratorControllerSpecHooksFinalizeWebhookService#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'DecoratorControllerSpecHooksFinalizeWebhookService' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerSpecHooksFinalizeWebhookService(obj: DecoratorControllerSpecHooksFinalizeWebhookService | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'namespace': obj.namespace,
    'port': obj.port,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DecoratorControllerSpecHooksSyncWebhookService
 */
export interface DecoratorControllerSpecHooksSyncWebhookService {
  /**
   * @schema DecoratorControllerSpecHooksSyncWebhookService#name
   */
  readonly name: string;

  /**
   * @schema DecoratorControllerSpecHooksSyncWebhookService#namespace
   */
  readonly namespace: string;

  /**
   * @schema DecoratorControllerSpecHooksSyncWebhookService#port
   */
  readonly port?: number;

  /**
   * @schema DecoratorControllerSpecHooksSyncWebhookService#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'DecoratorControllerSpecHooksSyncWebhookService' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DecoratorControllerSpecHooksSyncWebhookService(obj: DecoratorControllerSpecHooksSyncWebhookService | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'namespace': obj.namespace,
    'port': obj.port,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

